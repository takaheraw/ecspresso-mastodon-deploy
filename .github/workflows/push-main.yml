name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: takaheraw/mastodon
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: mastodon
          ref: production_deploy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - uses: kayac/ecspresso@v0
        with:
          version: v1.1.3

      - name: Deploy to Rails
        run: |
          ecspresso deploy --config ecspresso/rails.yaml

      - name: Deploy to Sidekiq
        run: |
          ecspresso deploy --config ecspresso/sidekiq.yaml

#      - name: Build, tag, and push app image to Amazon ECR
#        id: build-app
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: ecr-mastodon
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t mastodon ./mastodon/
#          docker tag mastodon:latest $ECR_REGISTRY/$ECR_REPOSITORY:mastodon_latest
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:mastodon_latest

#      - name: ecs run tsk for db:create
#        id: db-create
#        run: |
#          aws ecs run-task --cluster cluster-mastodon  --task-definition rails_task_def \
#          --overrides '{"containerOverrides": [{"name":"web", "command": ["rails","db:create"]}]}' \
#          --launch-type FARGATE \
#          --network-configuration 'awsvpcConfiguration={subnets=[subnet-06528b45fc58aa79a,subnet-0e0912b634f2f5365],securityGroups=[sg-0a5baf525922c9b44],assignPublicIp=DISABLED}'

#      - name: ecs run tsk for db:migrate
#        id: db-migrate
#        run: |
#          aws ecs run-task --cluster cluster-mastodon  --task-definition rails_task_def \
#          --overrides '{"containerOverrides": [{"name":"web", "command": ["rails","db:migrate"]}]}' \
#          --launch-type FARGATE \
#          --network-configuration 'awsvpcConfiguration={subnets=[subnet-06528b45fc58aa79a,subnet-0e0912b634f2f5365],securityGroups=[sg-0a5baf525922c9b44],assignPublicIp=DISABLED}'

#      - name: Render Amazon ECS task definition for web container
#        id: render-web-container
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: task-definition.json
#          container-name: web
#          image: 048225877211.dkr.ecr.ap-northeast-1.amazonaws.com/ecr-mastodon:mastodon_latest

#      - name: Deploy Amazon ECS task definition
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
#          service: service-rails-mastodon
#          cluster: cluster-mastodon 
#          wait-for-service-stability: true
